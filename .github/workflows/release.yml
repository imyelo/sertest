name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            artifact_name: sertest
            asset_name: sertest-linux-amd64

          # Windows x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: sertest.exe
            asset_name: sertest-windows-amd64.exe

          # macOS x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: sertest
            asset_name: sertest-macos-amd64

          # macOS ARM64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: sertest
            asset_name: sertest-macos-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.83.0
          targets: ${{ matrix.target }}
          components: rustfmt, clippy

      # Install dependencies for Linux builds
      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare assets
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}
          else
            tar -czf ../../../${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            sertest-linux-amd64.tar.gz
            sertest-windows-amd64.exe.zip
            sertest-macos-amd64.tar.gz
            sertest-macos-arm64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
